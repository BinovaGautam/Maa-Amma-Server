// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String?
  phone String
  token String
  sellers Sellers[]
}


model Sellers{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String
  admin User @relation(fields: [admin_id] , references: [id])
  admin_id Int
  variants ProductVariants[]
  varinatValues ProductVariantsMap[]
  products  Product[]
}

model Product{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String
  description String?
  image String?
  category Categories @relation(fields: [category_id] , references: [id]) 
  category_id Int


  seller Sellers @relation(fields: [seller_id] , references: [id])
  seller_id Int

  productsAttr ProductAttributesMap[]
}

model ProductVariants {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  
  name String
  label  String 
  creator Sellers @relation(fields: [creator_id] , references: [id])
  creator_id Int 
  variantValues ProductVariantsMap[]
}

model ProductVariantsMap {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  value String
  creator Sellers @relation(fields: [creator_id] , references: [id])

  variant ProductVariants @relation(fields: [variant_id] , references: [id])
  variant_id Int

  creator_id Int
  productsAttr ProductAttributesMap[]
}



model ProductAttributesMap {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sku String
  price Int 
  stock Int @default(0)
  is_available Boolean @default(true)

  product Product @relation(fields: [product_id] , references: [id])
  product_id Int

  attribute ProductVariantsMap @relation(fields: [attribute_id] , references: [id])
  attribute_id Int

}


model Categories{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String
  description String?
  parent_id Int?
  parent Categories? @relation("ParentChild",fields: [parent_id] , references: [id])
  children Categories[] @relation("ParentChild")
  products Product[]
}

